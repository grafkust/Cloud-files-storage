networks:
  app-network:
    driver: bridge

services:
  app:
    build: .
    container_name: grafCloud-app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "8080:8087"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: mysql:9.0.0
    container_name: mysql
    restart: unless-stopped
    networks:
      - app-network
    env_file:
      - .env
    ports:
      - '3306:3306'
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - './src/main/resources/db-init:/docker-entrypoint-initdb.d'
      - 'DB:/var/lib/mysql'

  redis:
    image: redis:7.4.0-bookworm
    restart: unless-stopped
    container_name: redis
    networks:
      - app-network
    env_file:
      - .env
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "$${REDIS_PASSWORD}", "--raw", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - 'redis:/data'

  minio:
    image: minio/minio:latest
    restart: unless-stopped
    container_name: minio
    networks:
      - app-network
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
      TZ: Europe/Moscow
    command: server ~/minio --console-address :9090
    entrypoint: >
      /bin/sh -c "
      mkdir -p ~/minio &&
      minio server ~/minio --console-address :9090 &
      sleep 5 &&
      mc alias set local http://localhost:9000 ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY} &&
      mc mb local/${MINIO_BUCKET} 2>/dev/null || true &&
      wait"
    ports:
      - '9090:9090'
      - '9000:9000'
    healthcheck:
      test: [ "CMD", "mc", "ready", "local" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    volumes:
      - './minio-data:/minio'

volumes:
  DB:
    driver: local
  minio-data:
    driver: local
  redis:
    driver: local